var AssetAdapter = function() {
    function e() {}
    var t = (__define, e),
    n = t.prototype;
    return n.getAsset = function(e, t, n) {
        function i(i) {
            t.call(n, i, e)
        }
        if (RES.hasRes(e)) {
            var s = RES.getRes(e);
            s ? i(s) : RES.getResAsync(e, i, this)
        } else RES.getResByUrl(e, i, this, RES.ResourceItem.TYPE_IMAGE)
    },
    e
} ();
egret.registerClass(AssetAdapter, "AssetAdapter", ["eui.IAssetAdapter"]);
var ThemeAdapter = function() {
    function e() {}
    var t = (__define, e),
    n = t.prototype;
    return n.getTheme = function(e, t, n, i) {
        function s(e) {
            t.call(i, e)
        }
        function r(t) {
            t.resItem.url == e && (RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, r, null), n.call(i))
        }
        RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, r, null),
        RES.getResByUrl(e, s, this, RES.ResourceItem.TYPE_TEXT)
    },
    e
} ();
egret.registerClass(ThemeAdapter, "ThemeAdapter", ["eui.IThemeAdapter"]);
var Controller = function(e) {
    function t() {
        e.call(this),
        t.instance ? console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new.") : t.instance = this
    }
    __extends(t, e);
    var n = (__define, t),
    i = n.prototype;
    return t.getInstance = function() {
        return this.instance ? this.instance: new this
    },
    t.destroyInstance = function() {
        this.instance = null
    },
    i.loadConfig = function(e, t, n, i) {
        function s(e) {
            RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, s, l),
            c = new eui.Theme(t, l.stage),
            c.addEventListener(eui.UIEvent.COMPLETE, r, l)
        }
        function r(e) {
            c.removeEventListener(eui.UIEvent.COMPLETE, r, l),
            RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, a, l),
            RES.loadGroup(n)
        }
        function a(e) {
            RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, a, l),
            o()
        }
        function o() {
            l.stage.addChild(scene.LoaderScene.getInstance()),
            l.stage.addChild(l.fadeRect),
            i.call(l)
        }
        this.init(),
        this.stage.registerImplementation("eui.IAssetAdapter", new AssetAdapter),
        this.stage.registerImplementation("eui.IThemeAdapter", new ThemeAdapter),
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, s, this),
        RES.loadConfig(e, "resource/");
        var c, l = this
    },
    i.init = function() {
        if (egret.Capabilities.runtimeType == egret.RuntimeType.WEB && egret.Capabilities.isMobile) {
            if (t.w = this.stage.stageWidth, this.stage.orientation == egret.OrientationMode.PORTRAIT) {
                var e = this.stage.stageWidth / this.stage.stageHeight;
                t.h = e > .57 && .67 > e ? this.stage.stageHeight: .89 * this.stage.stageHeight
            }
            this.stage.scaleMode = egret.StageScaleMode.FIXED_WIDTH
        } else t.w = this.stage.stageWidth,
        t.h = this.stage.stageHeight,
        this.stage.orientation = egret.OrientationMode.AUTO,
        this.stage.scaleMode = egret.StageScaleMode.SHOW_ALL;
        this.uiGroup = new eui.UILayer,
        this.addChild(this.uiGroup),
        this.fadeRect = new eui.Rect(t.w, t.h),
        this.fadeRect.alpha = 0,
        this.fadeRect.visible = !1,
        this.fadeTime = 200
    },
    i.runScene = function(e, t, n) {
        function i(n) {
            if (n.groupName == e.groupName) {
                var i = n.itemsLoaded / n.itemsTotal * 100 | 0;
                i = Math.min(i, 100),
                scene.LoaderScene.getInstance().setProgress(i),
                t ? t.call(c, i) : null
            }
        }
        function s(t) {
            t.groupName == e.groupName && (RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, s, c), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, r, c), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, i, c), RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, a, c), o())
        }
        function r(e) {
            console.warn("Group:" + e.groupName + " has failed to load")
        }
        function a(e) {
            console.warn("Url:" + e.resItem.url + " has failed to load")
        }
        function o() {
            c.fadeRect.visible = !0,
            egret.Tween.get(c.fadeRect).to({
                alpha: .5
            },
            c.fadeTime).call(function() {
                c.uiGroup.removeChildren(),
                c.uiGroup.addChild(e),
                scene.LoaderScene.getInstance().visible = !1
            },
            c).to({
                alpha: 0
            },
            c.fadeTime).call(function() {
                c.fadeRect.visible = !1,
                n ? n() : null
            },
            c)
        }
        var c = this; ! e.groupName || RES.isGroupLoaded(e.groupName) ? o() : (scene.LoaderScene.getInstance().visible = !0, RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, s, c), RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, r, c), RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, i, c), RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, a, c), RES.loadGroup(e.groupName))
    },
    t
} (eui.UILayer);
egret.registerClass(Controller, "Controller");
var Main = function(e) {
    function t() {
        e.apply(this, arguments)
    }
    __extends(t, e);
    var n = (__define, t),
    i = n.prototype;
    return i.childrenCreated = function() {
        var e = this;
        this.loadConfig("resource/default.res.json", "resource/default.thm.json", "preRES",
        function() {
            e.runScene(scene.MainScene.getInstance())
        })
    },
    t
} (Controller);
egret.registerClass(Main, "Main");
var ui; !
function(e) {
    var t = function(t) {
        function n(n, i, s) {
            t.call(this),
            this.isComplete = !1,
            this instanceof e.Scene && (this.x = this.y = 0, this.width = Controller.w, this.height = Controller.h),
            this.addEventListener(eui.UIEvent.CREATION_COMPLETE, this.onEnter, this),
            this.groupName = i ? i: null,
            n && (this.skinName = n),
            this instanceof scene.LoaderScene || !i || scene.LoaderScene.getInstance().setLoaderTip(s ? s: "玩命加载中")
        }
        __extends(n, t);
        var i = (__define, n),
        s = i.prototype;
        return s.onEnter = function() {
            this.isComplete = !0,
            this.removeEventListener(eui.UIEvent.CREATION_COMPLETE, this.onEnter, this),
            this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.touchTap, this);
            var e = Controller.w / Controller.h;
            if (egret.Capabilities.runtimeType == egret.RuntimeType.WEB && egret.Capabilities.isMobile && Controller.getInstance().stage.orientation == egret.OrientationMode.PORTRAIT && e > .63 && .66 > e) for (var t = 0; t < this.numChildren; t++) {
                var n = this.getChildAt(t);
                n.y *= .89
            }
        },
        s.touchTap = function(e) {
            this.onClick.call(this, e.target)
        },
        s.onClick = function(e) {},
        s.setCurrentState = function(e) {
            this.currentState = e,
            this.invalidateState()
        },
        s.getCurrentState = function() {
            return this.currentState
        },
        n
    } (eui.Component);
    e.Scene = t,
    egret.registerClass(t, "ui.Scene")
} (ui || (ui = {}));
var scene; !
function(e) {
    var t = function(t) {
        function n() {
            t.call(this, AboutSceneSkin),
            n.instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            n.instance = this
        }
        __extends(n, t);
        var i = (__define, n),
        s = i.prototype;
        return n.getInstance = function() {
            return n.instance || (n.instance = new n),
            n.instance
        },
        s.onEnter = function() {
            t.prototype.onEnter.call(this),
            utils.btnAddRemoveClick(0, this)
        },
        s.onClick = function(n) {
            t.prototype.onClick.call(this, n),
            n == this.okBtn && Controller.getInstance().runScene(e.MainScene.getInstance())
        },
        n
    } (ui.Scene);
    e.AboutScene = t,
    egret.registerClass(t, "scene.AboutScene")
} (scene || (scene = {}));
var scene; !
function(e) {
    var t = function(t) {
        function n() {
            t.call(this, GameSceneSkin, "gameRES", "加载游戏场景"),
            this.colors = ["game_bg_1_jpg", "game_bg_2_jpg"],
            n.instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            n.instance = this
        }
        __extends(n, t);
        var i = (__define, n),
        s = i.prototype;
        return n.getInstance = function() {
            return n.instance || (n.instance = new n),
            n.instance
        },
        n.destroyInstance = function() {
            this.instance = null
        },
        s.init = function(e) {
            this.type = e,
            Controller.getInstance().runScene(this),
            this.start()
        },
        s.setColor = function(e) {
            this.bg.source = RES.getRes(this.colors[e - 1]),
            this.modeTip.source = RES.getRes(this.type + "_text_" + e + "_png")
        },
        s.setScore = function() {
            this.scoreNum++,
            parseInt(utils.localStorage("BurningSkull_SCORE")) < this.scoreNum && utils.localStorage("BurningSkull_SCORE", "" + this.scoreNum),
            this.scoreLB.text = "积分:" + this.scoreNum
        },
        s.onEnter = function() {
            t.prototype.onEnter.call(this),
            utils.btnAddRemoveClick(0, this),
            this.soundBtn.selected = "1" != utils.localStorage("SOUND"),
            this.scoreNum = 0,
            this.start()
        },
        s.doTime = function() {
            var t = this;
            this.timer && clearInterval(this.timer),
            this.timer = setInterval(function() {
                if (t.timeNum > 0) {
                    var n = Math.floor(t.timeNum / 60),
                    i = t.timeNum % 60;
                    t.timeLB.text = utils.num2str(n, 2) + ":" + utils.num2str(i, 2),
                    t.timeNum--
                } else clearInterval(t.timer),
                t.timeNum = 60,
                Controller.getInstance().runScene(e.OverScene.getInstance())
            },
            1e3, 0)
        },
        s.start = function() {
            if (this.isComplete) {
                switch (this.timeNum = 60, this.group.removeChildren(), this.scoreNum = 0, this.scoreLB.text = "积分:" + this.scoreNum, this.type) {
                case "compare":
                    layer.CompareLayer.destroyInstance(),
                    layer.CompareLayer.getInstance().init(),
                    this.group.addChild(layer.CompareLayer.getInstance());
                    break;
                case "search":
                    layer.SearchLayer.destroyInstance(),
                    layer.CompareLayer.getInstance().init(),
                    this.group.addChild(layer.SearchLayer.getInstance());
                    break;
                case "eliminate":
                    layer.Eliminatelayer.destroyInstance(),
                    layer.CompareLayer.getInstance().init(),
                    this.group.addChild(layer.Eliminatelayer.getInstance())
                }
                this.doTime()
            }
        },
        s.onClick = function(n) {
            switch (t.prototype.onClick.call(this, n), n) {
            case this.pauseBtn:
                this.pauseBtn.selected ? (this.timeLB.visible = !1, clearInterval(this.timer), win.PauseWin.getInstance().show(!1)) : (this.doTime(), this.timeLB.visible = !0, win.PauseWin.getInstance().close());
                break;
            case this.soundBtn:
                this.soundBtn.selected ? (sound.stop(), e.MainScene.getInstance().soundBtn.selected = !0, utils.localStorage("SOUND", "-1")) : (sound.play("bg_mp3"), e.MainScene.getInstance().soundBtn.selected = !1, utils.localStorage("SOUND", "1"))
            }
        },
        n
    } (ui.Scene);
    e.GameScene = t,
    egret.registerClass(t, "scene.GameScene")
} (scene || (scene = {}));
var ui; !
function(e) {
    var t = function(e) {
        function t(t) {
            e.call(this, t)
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return i.removeSelf = function() {
            this.parent && this.parent.removeChild(this)
        },
        t
    } (e.Scene);
    e.Layer = t,
    egret.registerClass(t, "ui.Layer")
} (ui || (ui = {}));
var layer; !
function(e) {
    var t = function(e) {
        function t() {
            e.call(this, CompareLayerSkin),
            this.nums = [0, 0],
            this.color = 2,
            t._instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            t._instance = this
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return t.getInstance = function() {
            return t._instance || (t._instance = new t),
            t._instance
        },
        t.destroyInstance = function() {
            t._instance = null
        },
        i.onEnter = function() {
            e.prototype.onEnter.call(this),
            this.init()
        },
        i.onClick = function(t) {
            if (e.prototype.onClick.call(this, t), t instanceof eui.Button) {
                var n = parseInt(t.label),
                i = parseInt(this.middleNumLB.text);
                2 == this.color ? n >= i ? (this.color = 1, this.init(), scene.GameScene.getInstance().setScore()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()), this.color = 2) : i >= n ? (this.color = 2, this.init(), scene.GameScene.getInstance().setScore()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()))
            }
        },
        i.init = function() {
            if (this.isComplete) {
                this.setCurrentState("s" + this.color);
                var e = utils.arrayRandomNotSameObject(3, 0, 20, null, 0),
                t = utils.random(0, 100);
                t > 50 ? (this.btn1.label = "" + e[0], this.btn2.label = "" + e[2]) : (this.btn1.label = "" + e[2], this.btn2.label = "" + e[0]),
                this.middleNumLB.text = "" + e[1],
                scene.GameScene.getInstance().setColor(this.color)
            }
        },
        t
    } (ui.Layer);
    e.CompareLayer = t,
    egret.registerClass(t, "layer.CompareLayer")
} (layer || (layer = {}));
var layer; !
function(e) {
    var t = function(e) {
        function t() {
            e.call(this, EliminatelayerSkin),
            this.m1Nums = [0, 0],
            this.m2Nums = [0, 0, 0, 0],
            this.m3Nums = [0, 0, 0, 0, 0, 0, 0, 0, 0],
            this.type = ["m1", "m2", "m3"],
            this.color = 2,
            t.instance ? console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new.") : t.instance = this
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return t.getInstance = function() {
            return this.instance ? this.instance: new this
        },
        t.destroyInstance = function() {
            this.instance = null
        },
        i.onEnter = function() {
            e.prototype.onEnter.call(this),
            this.init()
        },
        i.init = function() {
            if (this.isComplete) {
                this.setCurrentState(this.type[utils.random(0, this.type.length - 1)] + "s" + this.color);
                for (var e = 0; e < this.numChildren; e++) this.getChildAt(e) instanceof eui.Button && (this.getChildAt(e).visible = !0);
                var t = this.getCurrentState().substring(0, 2);
                this[t + "Nums"] = utils.arrayRandomNotSameObject(this[t + "Nums"].length, -20, 20);
                for (var n = 0; n < this[t + "Nums"].length; n++) this[t + "btn" + (n + 1)].label = "" + this[t + "Nums"][n];
                scene.GameScene.getInstance().setColor(this.color)
            }
        },
        i.onClick = function(n) {
            function i() {
                for (var e = 0,
                n = 0; n < t.getInstance()[t.getInstance().getCurrentState().substring(0, 2) + "Nums"].length; n++) 0 == t.getInstance()[a + "btn" + (n + 1)].visible && e++;
                e == t.getInstance()[t.getInstance().getCurrentState().substring(0, 2) + "Nums"].length && (t.getInstance().color = 1 == t.getInstance().color ? 2 : 1, t.getInstance().init())
            }
            if (e.prototype.onClick.call(this, n), n instanceof eui.Button) {
                for (var s = -20,
                r = 20,
                a = this.getCurrentState().substring(0, 2), o = 0; o < this[a + "Nums"].length; o++) 1 == this[a + "btn" + (o + 1)].visible && (s <= this[a + "Nums"][o] && (s = this[a + "Nums"][o]), r >= this[a + "Nums"][o] && (r = this[a + "Nums"][o]));
                2 == this.color ? parseInt(n.label) == s ? (n.visible = !1, scene.GameScene.getInstance().setScore(), i()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()), this.color = 2) : parseInt(n.label) == r ? (n.visible = !1, scene.GameScene.getInstance().setScore(), i()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()))
            }
        },
        t
    } (ui.Layer);
    e.Eliminatelayer = t,
    egret.registerClass(t, "layer.Eliminatelayer")
} (layer || (layer = {}));
var layer; !
function(e) {
    var t = function(e) {
        function t() {
            e.call(this, SearchLayerSkin),
            this.nums = [0, 0],
            this.color = 2,
            t.instance ? console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new.") : t.instance = this
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return t.getInstance = function() {
            return this.instance ? this.instance: new this
        },
        t.destroyInstance = function() {
            this.instance = null
        },
        i.onEnter = function() {
            e.prototype.onEnter.call(this),
            this.init()
        },
        i.onClick = function(t) {
            if (e.prototype.onClick.call(this, t), t instanceof eui.Button) {
                for (var n = -20,
                i = 20,
                s = 0; s < this.nums.length; s++) n <= this.nums[s] && (n = this.nums[s]),
                i >= this.nums[s] && (i = this.nums[s]);
                2 == this.color ? parseInt(t.label) == n ? (this.color = 1, this.init(), scene.GameScene.getInstance().setScore()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()), this.color = 2) : parseInt(t.label) == i ? (this.color = 2, this.init(), scene.GameScene.getInstance().setScore()) : (scene.OverScene.getInstance().setScore(), Controller.getInstance().runScene(scene.OverScene.getInstance()))
            }
        },
        i.init = function() {
            if (this.isComplete) {
                this.setCurrentState("s" + this.color),
                this.nums = utils.arrayRandomNotSameObject(2, 0, 20);
                for (var e in this.nums) this["btn" + (parseInt(e) + 1)].label = "" + this.nums[e];
                scene.GameScene.getInstance().setColor(this.color)
            }
        },
        t
    } (ui.Layer);
    e.SearchLayer = t,
    egret.registerClass(t, "layer.SearchLayer")
} (layer || (layer = {}));
var scene; !
function(e) {
    var t = function(e) {
        function t() {
            e.call(this, LoaderSceneSkin),
            t.instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            t.instance = this
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return t.getInstance = function() {
            return t.instance || (t.instance = new t),
            t.instance
        },
        i.setProgress = function(e) {
            this.loadTextLB.text = this.loadText + "..." + e + "%"
        },
        i.setLoaderTip = function(e) {
            this.loadText = e
        },
        t
    } (ui.Scene);
    e.LoaderScene = t,
    egret.registerClass(t, "scene.LoaderScene")
} (scene || (scene = {}));
var scene; !
function(e) {
    var t = function(t) {
        function n() {
            t.call(this, MainSceneSkin, "mainRES"),
            n.instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            n.instance = this
        }
        __extends(n, t);
        var i = (__define, n),
        s = i.prototype;
        return n.getInstance = function() {
            return n.instance || (n.instance = new n),
            n.instance
        },
        s.onEnter = function() {
            t.prototype.onEnter.call(this),
            this.versionLB.text = "版本：1.3.1",
            utils.btnAddRemoveClick(0, this),
            egret.Tween.get(this.soundBtn, {
                loop: !0
            }).to({
                rotation: 360
            },
            1e4),
            this.soundBtn.selected = "1" != utils.localStorage("SOUND"),
            this.soundBtn.selected || sound.play("bg_mp3"),
            this.setScore()
        },
        s.setScore = function() {
            var e = this;
            utils.localStorage("BurningSkull_SCORE", null,
            function(t) {
                t ? e.scoreLB.text = "历史最高分:" + utils.localStorage("BurningSkull_SCORE") : utils.localStorage("BurningSkull_SCORE", "0")
            })
        },
        s.onClick = function(n) {
            switch (t.prototype.onClick.call(this, n), n) {
            case this.soundBtn:
                this.soundBtn.selected ? (sound.stop(), e.GameScene.getInstance().soundBtn.selected = !0, utils.localStorage("SOUND", "-1")) : (sound.play("bg_mp3"), e.GameScene.getInstance().soundBtn.selected = !1, utils.localStorage("SOUND", "1"));
                break;
            case this.compareBtn:
                e.GameScene.getInstance().init("compare");
                break;
            case this.searchBtn:
                e.GameScene.getInstance().init("search");
                break;
            case this.eliminateBtn:
                e.GameScene.getInstance().init("eliminate");
                break;
            case this.aboutBtn:
                Controller.getInstance().runScene(e.AboutScene.getInstance())
            }
        },
        n
    } (ui.Scene);
    e.MainScene = t,
    egret.registerClass(t, "scene.MainScene")
} (scene || (scene = {}));
var scene; !
function(e) {
    var t = function(t) {
        function n() {
            t.call(this, OverSceneSkin),
            n.instance ? console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new.") : n.instance = this
        }
        __extends(n, t);
        var i = (__define, n),
        s = i.prototype;
        return n.getInstance = function() {
            return this.instance ? this.instance: new this
        },
        n.destroyInstance = function() {
            this.instance = null
        },
        s.onClick = function(n) {
            switch (t.prototype.onClick.call(this, n), n) {
            case this.backBtn:
                e.GameScene.getInstance().scoreNum = 0,
                e.MainScene.getInstance().setScore(),
                Controller.getInstance().runScene(e.MainScene.getInstance());
				document.getElementById("toolbar").style.display="none";
            }
        },
        s.setScore = function() {
            this.isComplete && (this.scoreLB.text = "积分:" + e.GameScene.getInstance().scoreNum,dp_submitScore(e.GameScene.getInstance().scoreNum),document.getElementById("toolbar").style.display="block")
        },
        s.onEnter = function() {
            t.prototype.onEnter.call(this),
            utils.btnAddRemoveClick(0, this),
            this.setScore()
        },
        n
    } (ui.Scene);
    e.OverScene = t,
    egret.registerClass(t, "scene.OverScene")
} (scene || (scene = {}));
var ui; !
function(e) {
    var t = function(e) {
        function t(t, n) {
            e.call(this, t, n),
            this.maskLayer = new eui.Rect(Controller.w, Controller.h, 0),
            this.scaleX = this.scaleY = .5,
            this.maskLayer.alpha = .5,
            this.alpha = 0,
            utils.setAnchorCenter(this)
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return i.onClick = function(t) {
            e.prototype.onClick.call(this, t),
            t == this.closeBtn && this.close()
        },
        i.show = function(e, t, n, i) {
            this.spos = t ? t: {
                x: Controller.w / 2,
                y: Controller.h / 2
            },
            this.epos = n ? n: {
                x: Controller.w / 2,
                y: Controller.h / 2
            },
            this.time = i ? i: 280,
            this.parent || (Controller.getInstance().uiGroup.addChild(this.maskLayer), Controller.getInstance().uiGroup.addChild(this)),
            this.visible = !0,
            this.maskLayer.visible = 0 == e ? !1 : !0,
            this.x = this.spos.x,
            this.y = this.spos.y,
            egret.Tween.get(this.maskLayer).to({
                alpha: .5
            },
            .9 * this.time),
            egret.Tween.get(this).to({
                alpha: 1
            },
            .9 * this.time),
            egret.Tween.get(this).to({
                scaleX: 1,
                scaleY: 1,
                x: this.epos.x,
                y: this.epos.y
            },
            this.time, egret.Ease.backOut)
        },
        i.close = function(e, t) {
            var n = this;
            egret.Tween.get(this.maskLayer).to({
                alpha: 0
            },
            .9 * this.time),
            egret.Tween.get(this).to({
                alpha: 0
            },
            .9 * this.time),
            egret.Tween.get(this).to({
                scaleX: .5,
                scaleY: .5,
                x: this.spos.x,
                y: this.spos.y
            },
            this.time, egret.Ease.backIn).call(function() {
                e && 1 == e ? n.maskLayer.parent && n.maskLayer.parent.removeChild(n.maskLayer) : (n.maskLayer.visible = !1, n.visible = !1)
            },
            this).wait(this.time / 2).call(function() {
                t && t()
            },
            this)
        },
        t
    } (e.Scene);
    e.Window = t,
    egret.registerClass(t, "ui.Window")
} (ui || (ui = {}));
var win; !
function(e) {
    var t = function(e) {
        function t() {
            e.call(this, PauseWinSkin),
            t._instance && console.error("单例错误：Use " + egret.getQualifiedClassName(this) + ".getInstance() instead of new."),
            t._instance = this
        }
        __extends(t, e);
        var n = (__define, t),
        i = n.prototype;
        return t.getInstance = function() {
            return t._instance || (t._instance = new t),
            t._instance
        },
        i.onClick = function(t) {
            switch (e.prototype.onClick.call(this, t), t) {
            case this.closeBtn:
                scene.GameScene.getInstance().timeLB.visible = !0,
                scene.GameScene.getInstance().pauseBtn.selected = !1,
                scene.GameScene.getInstance().doTime();
                break;
            case this.backBtn:
                this.close(!1,
                function() {
                    scene.GameScene.destroyInstance(),
                    scene.GameScene.getInstance().scoreNum = -1,
                    scene.GameScene.getInstance().setScore(),
                    scene.GameScene.getInstance().timeLB.visible = !0,
                    scene.GameScene.getInstance().pauseBtn.selected = !1,
                    scene.MainScene.getInstance().setScore(),
                    Controller.getInstance().runScene(scene.MainScene.getInstance())
                })
            }
        },
        t
    } (ui.Window);
    e.PauseWin = t,
    egret.registerClass(t, "win.PauseWin")
} (win || (win = {}));
var iap = function() {
    function e() {}
    var t = (__define, e);
    t.prototype;
    return e.payForProduct = function(e, t) {
        egret.Capabilities.runtimeType == egret.RuntimeType.NATIVE ? (egret.ExternalInterface.addCallback("doBillingCallback", t), egret.ExternalInterface.call("doBilling", e)) : t("1")
    },
    e
} ();
egret.registerClass(iap, "iap");
var net; !
function(e) {
    var t = function() {
        function e() {}
        var t = (__define, e);
        t.prototype;
        return e.request = function(e, t, n, i) {
            function s(e) {
                var t = e.currentTarget;
                t.removeEventListener(egret.Event.COMPLETE, s, l);
                var n = pool.get(t.hashCode);
                n && (n(JSON.parse(r.data)), pool.remove(t.hashCode))
            }
            var r = new egret.URLLoader;
            pool.put(r.hashCode, n),
            r.dataFormat = egret.URLLoaderDataFormat.TEXT;
            var a = new egret.URLRequest(e);
            a.method = 1 == i ? egret.URLRequestMethod.GET: egret.URLRequestMethod.POST;
            var o = [];
            for (var c in t) o.push(c + "=" + t[c]);
            a.data = new egret.URLVariables(o.join("&")),
            r.load(a);
            var l = this;
            r.addEventListener(egret.Event.COMPLETE, s, l)
        },
        e
    } ();
    e.Ajax = t,
    egret.registerClass(t, "net.Ajax")
} (net || (net = {}));
var pool = function() {
    function e() {}
    var t = (__define, e);
    t.prototype;
    return e.set = function(e, t) {
        this.objPool[e] = t
    },
    e.put = function(e, t) {
        this.has(e) ? console.error("对象池添加失败:key is existed in this objPool.") : this.set(e, t)
    },
    e.get = function(e) {
        return this.objPool[e]
    },
    e.has = function(e) {
        return this.objPool.hasOwnProperty(e)
    },
    e.remove = function(e) {
        this.has(e) ? (this.objPool[e] = null, delete this.objPool[e]) : console.error("对象池删除失败:key not exist in this objPool.")
    },
    e.keys = function() {
        var e = [];
        for (var t in this.objPool) e.push(t);
        return e
    },
    e.destroy = function() {
        this.objPool = {}
    },
    e.objPool = {},
    e
} ();
egret.registerClass(pool, "pool");
var sound = function() {
    function e() {}
    var t = (__define, e);
    t.prototype;
    return e.play = function(e, t) {
        var n = this,
        i = t ? 0 : 1;
        e.indexOf("/") > -1 ? (this.sound = new egret.Sound, this.sound.load(e), this.sound.addEventListener(egret.Event.COMPLETE,
        function() {
            n.soundChannel = n.sound.play(0, i)
        },
        this)) : (this.sound = RES.getRes(e), this.soundChannel = this.sound.play(0, i))
    },
    e.stop = function() {
        this.soundChannel && (this.sound.close(), this.soundChannel.stop(), this.sound = null, this.soundChannel = null)
    },
    e
} ();
egret.registerClass(sound, "sound");
var utils = function() {
    function e() {}
    var t = (__define, e);
    t.prototype;
    return e.showTip = function(e, t, n, i, s, r, a) {
        if (egret.Capabilities.runtimeType == egret.RuntimeType.NATIVE) egret.ExternalInterface.call("showTip", e);
        else {
            var o = new egret.TextField;
            o.text = e,
            o.size = r ? r: 30,
            o.fontFamily = "微软雅黑",
            o.width = e.length * o.size,
            o.y = n ? n: .8 * Controller.h,
            o.x = i ? i + o.width / 2 : Controller.w / 2 - o.width / 2,
            o.textAlign = egret.HorizontalAlign.CENTER,
            o.textColor = s ? s: 4443520;
            var c = new egret.Sprite;
            c.graphics.beginFill(a ? a: 5197647),
            c.graphics.drawRoundRect(o.x - o.size, o.y - o.size / 2, o.width + 2 * o.size, o.height + o.size, o.size),
            c.graphics.endFill(),
            c.addChild(o),
            c.alpha = 0;
            var l = t ? t: 800;
            Controller.getInstance().uiGroup.addChild(c),
            egret.Tween.get(c).to({
                y: c.y - o.size,
                alpha: 1
            },
            l / 8).wait(1.5 * l).to({
                y: c.y + 2 * o.size,
                alpha: 0
            },
            l / 4).call(function() {
                c.parent && c.parent.removeChild(c)
            })
        }
    },
    e.setAnchorCenter = function(e, t) {
        if (t) for (var n = 0; n < e.parent.numChildren; n++) e.parent.getChildAt(n).anchorOffsetX = e.parent.getChildAt(n).width / 2,
        e.parent.getChildAt(n).anchorOffsetY = e.parent.getChildAt(n).height / 2,
        e.parent.getChildAt(n).x += e.parent.getChildAt(n).width / 2,
        e.parent.getChildAt(n).y += e.parent.getChildAt(n).height / 2;
        else e.anchorOffsetX = e.width / 2,
        e.anchorOffsetY = e.height / 2,
        e.x += e.width / 2,
        e.y += e.height / 2
    },
    e.btnAddRemoveClick = function(t, n) {
        function i(e) {
            e.target.scaleX = e.target.scaleY = 1.05
        }
        function s(e) {
            e.target.scaleX = e.target.scaleY = 1
        }
        for (var r = 0; r < n.numChildren; r++) n.getChildAt(r) instanceof eui.Button && (0 == t ? (e.setAnchorCenter(n.getChildAt(r)), n.getChildAt(r).addEventListener(egret.TouchEvent.TOUCH_BEGIN, i, n), n.getChildAt(r).addEventListener(egret.TouchEvent.TOUCH_END, s, n), n.getChildAt(r).addEventListener(egret.TouchEvent.TOUCH_CANCEL, s, n), n.getChildAt(r).addEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, s, n)) : (n.getChildAt(r).removeEventListener(egret.TouchEvent.TOUCH_BEGIN, i, n), n.getChildAt(r).removeEventListener(egret.TouchEvent.TOUCH_END, s, n), n.getChildAt(r).removeEventListener(egret.TouchEvent.TOUCH_CANCEL, s, n), n.getChildAt(r).removeEventListener(egret.TouchEvent.TOUCH_RELEASE_OUTSIDE, s, n)))
    },
    e.fullScreen = function() {
        if (egret.Capabilities.runtimeType != egret.RuntimeType.NATIVE) {
            var e = document.documentElement,
            t = e.requestFullScreen || e.webkitRequestFullScreen || e.mozRequestFullScreen || e.msRequestFullScreen;
            if ("undefined" != typeof t && t) t.call(e);
            else if ("undefined" != typeof window.ActiveXObject) {
                var n = new ActiveXObject("WScript.Shell");
                null != n && n.SendKeys("{F11}")
            }
        }
    },
    e.rgb2hex = function(e, t, n) {
        return "0x" + (e << 16 | t << 8 | n).toString(16)
    },
    e.num2str = function(e, t) {
        for (var n = "" + e,
        i = "",
        s = 0; s < t - n.length; s++) i += "0";
        return i + n
    },
    e.bigNumFormat = function(e) {
        return 1e4 > e ? e + "": 1e6 > e ? (e /= 1e4, e.toFixed(1) + "万") : 1e7 > e ? (e = e / 1e4 / 1e3, e.toFixed(2) + "千万") : 1e8 > e ? (e = e / 1e4 / 1e4, e.toFixed(3) + "亿") : void 0
    },
    e.conversionAngleRadian = function(e, t) {
        return 0 == e ? t / Math.PI * 180 : t / 180 * Math.PI
    },
    e.arrayExistObject = function(e, t, n) {
        for (var i in e) if (e[i] === t) return n && n(i),
        !0;
        return ! 1
    },
    e.arrayRandomNotSameObject = function(t, n, i, s, r) {
        for (var a = s ? s: [], o = 0; t > o; o++) {
            for (var c = e.random(n, i); e.arrayExistObject(a, c);) c = e.random(n, i);
            a.push(c)
        }
        switch (r) {
        case 0:
            return a.sort(function(e, t) {
                return e > t ? 1 : -1
            });
        case 1:
            return a.sort(function(e, t) {
                return t > e ? 1 : -1
            });
        default:
            return a
        }
    },
    e.arrayAddRemoveObject = function(e, t, n, i) {
        if (0 == e) t.splice.apply(t, [i ? i: t.length, 0].concat(n));
        else {
            var s = n instanceof Array ? n: [n];
            for (var r in t) for (var a in s) if (t[r] === s[a]) return void t.splice(r, 1)
        }
    },
    e.isWeiXinBrowser = function() {
        return navigator.userAgent.toLowerCase().indexOf("micromessenger") > -1
    },
    e.eventHideShow = function(e, t) {
        var n, i, s = ["", "moz", "ms", "webkit"];
        for (var r in s) if (document[s[r] + "hidden"]) {
            n = "hidden",
            i = "visibilitychange";
            break
        }
        n || (n = "blur", i = "focus"),
        window.addEventListener(n,
        function() {
            e()
        },
        !1),
        window.addEventListener(i,
        function() {
            t()
        },
        !1)
    },
    e.getURLQueryString = function(e) {
        if (egret.Capabilities.runtimeType == egret.RuntimeType.WEB) {
            var t = window.location.search.substr(1).match(new RegExp("(^|&)" + e + "=([^&]*)(&|$)"));
            return t ? t[2] : null
        }
    },
    e.random = function(e, t, n, i) {
        return n ? e + parseFloat((Math.random() * (t - e)).toFixed(i ? i: 2)) : e + Math.round(Math.random() * (t - e))
    },
    e.shakeScreen = function(e, t) {
        for (var n = [], i = e ? e: 8, s = t ? t: 40, r = i / 2; r > 0; r--) n.push({
            x: 2 * -r,
            y: 2 * -r
        }),
        n.push({
            x: 2 * r,
            y: 2 * r
        });
        n.push({
            x: 0,
            y: 0
        });
        var a = 0,
        o = setInterval(function() {
            a == n.length ? (clearInterval(o), o = null) : (Controller.getInstance().x = n[a].x, Controller.getInstance().y = n[a].y, a++)
        },
        s)
    },
    e.localStorage = function(e, t, n) {
        var i = egret.localStorage.getItem(e);
        return i ? n && n(!0) : n && n(!1),
        t && egret.localStorage.setItem(e, t),
        i
    },
    e
} ();
egret.registerClass(utils, "utils");
